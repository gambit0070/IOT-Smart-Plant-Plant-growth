// src/hooks/useAlerts.js
import { useEffect } from "react";

/**
 * useAlerts ‚Äî –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç endpoint /alerts –∫–∞–∂–¥—ã–µ `interval` –º—Å
 * –∏ –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–∏–Ω—è—Ç—ã–µ —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ window.alert.
 * –ï—Å–ª–∏ endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å.
 *
 * @param {number} interval ‚Äî –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 */
export default function useAlerts(interval = 10000) {
  useEffect(() => {
    // –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ proxy –≤ package.json ‚Äî API = ""
    // –ò–Ω–∞—á–µ –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ –≤ .env REACT_APP_API_URL –±–µ–∑ http, 
    // –∏ –∑–¥–µ—Å—å —Å–¥–µ–ª–∞–π—Ç–µ: const API = `http://${process.env.REACT_APP_API_URL}`;
    const API = "";

    const checkAlerts = () => {
      console.log("[useAlerts] üîÑ polling /alerts");
      fetch(`${API}/alerts`)
        .then((res) => {
          console.log("[useAlerts] ‚Üê status", res.status);
          return res.json();
        })
        .then((data) => {
          console.log("[useAlerts] ‚Üê data", data);
          if (Array.isArray(data) && data.length > 0) {
            data.forEach((evt) => {
              console.log(`[useAlerts] ‚ö†Ô∏è alert: ${evt.message}`);
              window.alert(evt.message);
            });
          }
        })
        .catch((err) => {
          console.error("[useAlerts] ‚ÄºÔ∏è Error fetching alerts:", err);
        });
    };

    // —Å—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞ –ø–æ—Ç–æ–º –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
    checkAlerts();
    const timerId = setInterval(checkAlerts, interval);
    return () => clearInterval(timerId);
  }, [interval]);

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ¬´–ø—É—Å—Ç–æ–π¬ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —á—Ç–æ–±—ã —Ö–≤–∞—Ç–∞–ª–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ <AlertNotification/>
  const AlertNotification = () => null;
  return { AlertNotification };
}
